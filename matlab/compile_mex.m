path_to_eigen = '/usr/include/eigen3';
solver_types = {'floor_fHf', 'floor_Hf', 'floor_f1Hf2', 'ransac_floor_fHf'};
cpp_flags = '-O';
output_folder = 'solvers';

for j = 1:length(solver_types)
    solver_type = solver_types{j};
    switch solver_type
        case 'floor_fHf'
            mex(['-I', path_to_eigen], '-I../c++', ...
                '-I../c++/floor_fHf', '-I../c++/helpers', ...
                '../c++/floor_fHf/get_floor_fHf.cpp', ...
                '../c++/floor_fHf/solver_floor_fHf.cpp', ...
                '../c++/helpers/normalize2dpts.cpp', ...
                '../c++/floor_fHf/mex_get_floor_fHf.cpp', ...
                cpp_flags, '-outdir', output_folder)
        case 'floor_Hf'
            mex(['-I', path_to_eigen], '-I../c++', ...
                '-I../c++/floor_Hf', '-I../c++/helpers', ...
                '../c++/floor_Hf/get_floor_Hf.cpp', ...
                '../c++/floor_Hf/solver_floor_Hf.cpp', ...
                '../c++/helpers/normalize2dpts.cpp', ...
                cpp_flags, '-outdir', output_folder)
        case 'floor_f1Hf2'
            mex(['-I', path_to_eigen], '-I../c++', ...
                '-I../c++/floor_f1Hf2', '-I../c++/helpers', ...
                '../c++/floor_f1Hf2/get_floor_f1Hf2.cpp', ...
                '../c++/floor_f1Hf2/solver_floor_f1Hf2.cpp', ...
                '../c++/helpers/normalize2dpts.cpp', ...
                cpp_flags, '-outdir', output_folder)
        case 'ransac_floor_fHf'
            mex(['-I', path_to_eigen], '-I../c++', ...
                '-I../c++/floor_fHf', '-I../c++/helpers', ...
                '../c++/floor_fHf/ransac_floor_fHf.cpp', ...
                '../c++/floor_fHf/get_floor_fHf.cpp', ...
                '../c++/floor_fHf/solver_floor_fHf.cpp', ...
                '../c++/helpers/normalize2dpts.cpp', ...
                '../c++/helpers/randperm.cpp', ...
                cpp_flags, '-outdir', output_folder)
        otherwise
            error('Not supported.')
    end
end
